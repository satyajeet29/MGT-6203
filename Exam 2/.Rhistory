filter(Spent = 0)
data %>%
filter(Spent == 0)
data %>%
filter(Spent == 0) %>%
count(ad_id, sort = True)
data %>%
filter(Spent == 0) %>%
count(ad_id, sort = TRUE)
summary(lm1)
lm1 = lm(clicks~cost)
summary(lm1)
lm1 = lm(clicks~cost+months)
summary(lm1)
library(dplyr)
data <- read.csv("KAG_conversion_data_wrangled.csv",stringsAsFactors = FALSE)
data %>%
filter(Spent == 0)%>%
group_by(campaign_id) %>%
summarize(count = n())
data %>%
summaryize(count = n_distinct())
data %>%
summarize(count = n_distinct())
data %>%
group_by(ad_id)
summarize(count = n_distinct())
data %>%
group_by(ad_id)%>%
summarize(count = n_distinct())
data %>%
select(ad_id)
data %>%
select(ad_id) %>%
summarize(n_distinct())
data %>%
select(ad_id) %>%
summarize(n())
data %>%
select(ad_id) %>%
summarize(count = n())
data %>%
select(ad_id) %>%
summarize(count = n(ad_id))
data %>%
select(ad_id) %>%
summarize(count = n_distinct(ad_id))
data %>%
filter(Spent == 0)%>%
arrange(impressions)
data %>%
filter(Spent == 0)%>%
arrange(Impressions)
data %>%
filter(Spent == 0)%>%
arrange(desc(Impressions)) %>%
select(ad_id, Impressions)
install.packages("queueing")
library(ISLR)
rm(list = ls())
library(ISLR)
data = Auto
lm1 = lm(data$mpg ~ data$horsepower)
summary(lm1)
data = mtcars
contrasts(data$am)
View(data)
contrasts(as.factor(data$am))
lm1 = lm(data$mpg ~ data$hp)
lm2 = lm(data$mpg ~ data$hp + as.factor(data$am) + as.factor(data$vs))
summary(lm2)
data <- data %>%
mutate(amF = ifelse(am == 1, 1,0)) %>%
mutate(vsF = ifelse(vs == 1, 1,0)) %>%
mutate(vshp = vs*hp)
View(data)
lm25 = lm(data$mpg ~ data$hp + data$am + data$vs)
summary(lm25)
lm3 = lm(data$mpg ~ data$hp + as.factor(data$am) + as.factor(data$vs) + data$vshp)
summary(lm1)
summary(lm1)
summary(lm2)
summary(lm3)
library(MASS)
?Boston
data = Boston
data %>%
mutate(Result = ifelse(medv > 30, 1, 0))%>%
select(-medv)
data %>%
mutate(Result = ifelse(medv > 30, 1, 0))%>%
select(data,-medv)
data %>%
mutate(Result = ifelse(medv > 30, 1, 0))
data %>%
mutate(Result = ifelse(medv > 30, 1, 0)) %>%
select(-'medv')
data %>%
mutate(Result = ifelse(medv > 30, 1, 0)) %>%
select(-medv)
data %>% select(-medv)
data %>% select(medv)
data = Boston
data %>% select(medv)
data %>% select(age)
data %>% dplyr::select(age)
data %>%
mutate(Result = ifelse(medv > 30, 1, 0)) %>%
dplyr::select(-medv)
data <- data %>%
mutate(Result = ifelse(medv > 30, 1, 0)) %>%
dplyr::select(-medv)
lgt <- glm(data$Result~., family = "binomial")
lgt <- glm(data$Result~., data = data, family = "binomial")
summary(lgt)
predict(lgt)
predict(lgt, newdata = .,type = "response")
predict(lgt, newdata = data,type = "response")
data <- data %>%
mutate(logpred = predict(lgt, newdata = data,type = "response")) %>%
mutate(Result2 = ifelse(logpred >= .5, 1, 0))
data
data %>%
filter(Result = 1) %>%
filter(Result2 = 1) %>%
summarize(count = n())
data %>%
filter(Result == 1) %>%
filter(Result2 == 1) %>%
summarize(count = n())
TP = data %>%
filter(Result == 1) %>%
filter(Result2 == 1) %>%
summarize(count = n())
FN = data %>%
filter(Result == 1) %>%
filter(Result2 == 0) %>%
summarize(count = n())
data %>%
filter(Result == 1) %>%
filter(Result2 == 1) %>%
summarize(count = n())
data %>%
filter(Result == 0) %>%
filter(Result2 == 0) %>%
summarize(count = n())
data %>%
filter(Result == 1) %>%
filter(Result2 == 0) %>%
summarize(count = n())
data %>%
filter(Result == 0) %>%
filter(Result2 == 1) %>%
summarize(count = n())
TP = data %>%
filter(Result == 1) %>%
filter(Result2 == 1) %>%
summarize(count = n())
TN = data %>%
filter(Result == 0) %>%
filter(Result2 == 0) %>%
summarize(count = n())
FN = data %>%
filter(Result == 1) %>%
filter(Result2 == 0) %>%
summarize(count = n())
FP = data %>%
filter(Result == 0) %>%
filter(Result2 == 1) %>%
summarize(count = n())
data <- read.csv("abalone.csv",stringsAsFactors = FALSE)
data <- read.csv("abalone.csv",stringsAsFactors = FALSE)
lm1 = lm(data$Rings ~ data$Diameter + data$Height)
summary(lm1)
View(data)
data1 <- data %>%
filter(Type != "F")
View(data1)
data2 <- data %>%
filter(Type != "M")
lm2 = lm(data1$Diameter ~ data1$Type)
summary(lm2)
lm2 = lm(data1$Diameter ~ as.factor(data1$Type))
summary(lm2)
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
data1 <- data %>%
filter(Type != "F") %>%
mutate(Type = ifelse(Type == "M"), 1, 0)
lm2 = lm(data1$Diameter ~ as.factor(data1$Type))
summary(lm2)
View(data1)
data1 <- data %>%
filter(Type != "F") %>%
mutate(Type = ifelse(Type == "M", 1, 0))
lm2 = lm(data1$Diameter ~ as.factor(data1$Type))
summary(lm2)
data2 <- data %>%
filter(Type != "M") %>%
mutate(Type = ifelse(Type == "F", 1, 0))
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
View(data2)
data2 <- data %>%
filter(Type != "M")
View(data2)
data <- read.csv("Admissions.csv")
View(data)
lgt = glm(data$Admitted~., data = data, family = "binomial")
data <- data %>%
mutate(logprd = predict(lgt, newdata = ., type = "response"))%>%
mutate(Admitted2 = ifelse(logprd > .75,1,0))
View(data)
sum(data$Admitted == data$Admitted2)
len(data)
length(data)
rows(data)
size(data)
nrows(data)
data$Admitted == data$Admitted2
len(data.index)
data.shape[0]
NROW(data)
sum(data$Admitted == data$Admitted2)/NROW(data)
sum(data$Admitted == data$Admitted2)
if (!require(PerformanceAnalytics)) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
data(managers)
force(managers)
data = managers
View(data)
table.Stats(data)
sd(data$`SP500 TR`)
View(data)
MarketExcess = data$`SP500 TR`- data$`US 10Y TR`
View(MarketExcess)
View(data)
MarketExcess = data$`SP500 TR`- data$`US 10Y TR`
HAM1Exc = data$HAM1 - data$`US 10Y TR`
HAM2Exc = data$HAM2 - data$`US 10Y TR`
HAM3Exc = data$HAM3 - data$`US 10Y TR`
alph1 = lm(HAM1Exc ~ MarketExcess)
alph2 = lm(HAM2Exc ~ MarketExcess)
alph3 = lm(HAM3Exc ~ MarketExcess)
summary(alph1)
summary(alph2)
summary(alph3)
alph4 = lm(HAM4Exc ~ MarketExcess)
HAM4Exc = data$HAM4 - data$`US 10Y TR`
alph4 = lm(HAM4Exc ~ MarketExcess)
summary(alph1)
summary(alph2)
summary(alph3)
summary(alph1)
summary(alph2)#.007
summary(alph3)
summary(alph1)
summary(alph4)#.005
summary(alph1)#.004
summary(alph2)#.007
summary(alph1)#.004
summary(alph3)#.005
summary(alph4)#.003
Return.cumulative(data$HAM1, geometric = TRUE)
(data$HAM1+1)
prod(data$HAM1+1)-1
Return.cumulative(data$HAM1, geometric = TRUE)
(prod(data$HAM1+1)-1)*8000
(prod(data$HAM1+1))*8000
TreynorRatio(data$HAM3, data$`SP500 TR`, data$`US 10Y TR`)
TreynorRatio(data$HAM4, data$`SP500 TR`, data$`US 10Y TR`)
TreynorRatio(data$HAM3, data$`SP500 TR`, data$`US 10Y TR`)
TreynorRatio(data$HAM4, data$`SP500 TR`, data$`US 10Y TR`) #.075
TreynorRatio(data$HAM3, data$`SP500 TR`, data$`US 10Y TR`) #.14
data <- read.csv("Final_Exam_Factors.csv")
View(data)
data <- data %>%
mutate(NV_rf = NVDA - RF) %>%
mutate(INT_rf = INTC - RF)
fac1 = lm(NV_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM)
fac2 = lm(INT_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM)
fac1 = lm(NV_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
fac2 = lm(INT_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
summary(fac1)
summary(fac2)
summary(fac1)
data <- read.csv("KAG_wrangled_dataset.csv")
data <- read.csv(" KAG_wrangled_dataset.csv ",stringsAsFactors = FALSE)
data <- read.csv("KAG_wrangled_dataset.csv",stringsAsFactors = FALSE)
data %>%
filter(Impressions > 10000)%>%
group_by(gender) %>%
summarize(counts = n())
data %>%
filter(xyz_campaign_id == 916) %>%
mutate(ConvRate = ifelse(Total_Conversion == 0, 0, Approved_Conversion/Total_Conversion))
data %>%
filter(xyz_campaign_id == 916) %>%
mutate(ConvRate = ifelse(Total_Conversion == 0, 0, Approved_Conversion/Total_Conversion)) %>%
summarize(avg = mean(ConvRate))
data %>%
filter(xyz_campaign_id == 916) %>%
summarize(totTot = sum(Total_Conversion),
totApp = sum(Approved_Conversion))
data %>%
mutate(CPC = ifelse(Clicks == 0, 0, Spent/Clicks)) %>%
group_by(gender, age)
data %>%
mutate(CPC = ifelse(Clicks == 0, 0, Spent/Clicks)) %>%
group_by(gender, age) %>%
summarize(avg = mean(CPC))
data %>%
group_by(gender, age) %>%
summarize(totClick = sum(Clicks),
totSpent = sum(Spent)) %>%
mutate(CPC = totSpent/totClick)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE,message = FALSE)
i_mm1 <- NewInput.MM1(lambda = 125.71, mu = 127.05, n = 100)
library(dplyr)
library(queueing)
library(readr)
i_mm1 <- NewInput.MM1(lambda = 125.71, mu = 127.05, n = 100)
## Build the model
o_mm1 <- QueueingModel(i_mm1)
Report(o_mm1)
data <- read.csv("sample_data.csv",stringsAsFactors = FALSE)
View(data)
rowMeans(data)
data <- data %>%
dplyr::select(-sample)
rowMeans(data)
data %>%
mutate(xbar = rowMeans(data))
install.packages("fpp2")
data <-read.csv("Store_Demand_Final.csv")
data[,-1]
mdy(data$Date)
library(lubridate)
mdy(data$Date)
data$Date <- mdy(data$Date)
xts(data[-1],order.by = data$Date)
class(data$Date)
ses(data, alpha = .25, h = 5)
library(fpp2)
ses(data, alpha = .25, h = 5)
data <- xts(data[-1],order.by = data$Date)
ses(data, alpha = .25, h = 5)
ts1 <- ses(data, alpha = .25, h = 5)
accuracy(ts1)
plot(ts1)
data <- read.csv("sample_data.csv",stringsAsFactors = FALSE)
data <- data %>%
dplyr::select(-sample)
data %>%
mutate(xbar = rowMeans(data))
rowMeans(data)
View(data)
data %>%
filter(xyz_campaign_id == 916) %>%
mutate(ConvRate = ifelse(Total_Conversion == 0, 0, Approved_Conversion/Total_Conversion)) %>%
summarize(avg = mean(ConvRate))
data <- read.csv("KAG_wrangled_dataset.csv",stringsAsFactors = FALSE)
data %>%
filter(Impressions > 10000)%>%
group_by(gender) %>%
summarize(counts = n())
data %>%
filter(xyz_campaign_id == 916) %>%
mutate(ConvRate = ifelse(Total_Conversion == 0, 0, Approved_Conversion/Total_Conversion)) %>%
summarize(avg = mean(ConvRate))
data %>%
mutate(CPC = ifelse(Clicks == 0, 0, Spent/Clicks)) %>%
group_by(gender, age) %>%
summarize(avg = mean(CPC))
data %>%
group_by(gender, age) %>%
summarize(totClick = sum(Clicks),
totSpent = sum(Spent)) %>%
mutate(CPC = totSpent/totClick)
data <- read.csv("KAG_wrangled_dataset.csv",stringsAsFactors = FALSE)
data %>%
filter(Impressions > 10000)%>%
group_by(gender) %>%
summarize(counts = n())
data <- read.csv("Final_Exam_Factors.csv")
data <- data %>%
mutate(NV_rf = NVDA - RF) %>%
mutate(INT_rf = INTC - RF)
fac1 = lm(NV_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
fac2 = lm(INT_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
summary(fac1)
summary(fac2)
fac2 = lm(INT_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
summary(fac2)
summary(fac1)
summary(fac2)
summary(fac1)
summary(fac1)
summary(fac2)
if (!require(PerformanceAnalytics)) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
data = managers
table.Stats(data)
MarketExcess = data$`SP500 TR`- data$`US 10Y TR`
HAM1Exc = data$HAM1 - data$`US 10Y TR`
HAM2Exc = data$HAM2 - data$`US 10Y TR`
HAM3Exc = data$HAM3 - data$`US 10Y TR`
HAM4Exc = data$HAM4 - data$`US 10Y TR`
alph1 = lm(HAM1Exc ~ MarketExcess)
alph2 = lm(HAM2Exc ~ MarketExcess)
alph3 = lm(HAM3Exc ~ MarketExcess)
alph4 = lm(HAM4Exc ~ MarketExcess)
summary(alph1)#.004
summary(alph2)#.007
summary(alph3)#.005
summary(alph4)#.003
Return.cumulative(data$HAM1, geometric = TRUE)
(prod(data$HAM1+1))*8000
if (!require(PerformanceAnalytics)) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
data = managers
table.Stats(data)
data <- read.csv("Admissions.csv")
lgt = glm(data$Admitted~., data = data, family = "binomial")
data <- data %>%
mutate(logprd = predict(lgt, newdata = ., type = "response"))%>%
mutate(Admitted2 = ifelse(logprd > .75,1,0))
sum(data$Admitted == data$Admitted2)/NROW(data)
data <- read.csv("abalone.csv",stringsAsFactors = FALSE)
lm1 = lm(data$Rings ~ data$Diameter + data$Height)
summary(lm1)
data1 <- data %>%
filter(Type != "F") %>%
mutate(Type = ifelse(Type == "M", 1, 0))
lm2mutate(Type = ifelse(Type == "M", 1, 0)) = lm(data1$Diameter ~ as.factor(data1$Type))
summary(lm2)
data2 <- data %>%
filter(Type != "M") %>%
mutate(Type = ifelse(Type == "F", 1, 0))
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
View(data2)
data2 <- data %>%
filter(Type != "M")
View(data2)
data2 <- data %>%
filter(Type != "M") %>%
mutate(Type = ifelse(Type == "F", 1, 0))
lm3 = lm(data2$Diameter ~ as.factor(data2$Type))
summary(lm3)
library(MASS)
?Boston
data = Boston
data <- data %>%
mutate(Result = ifelse(medv > 30, 1, 0)) %>%
dplyr::select(-medv)
lgt <- glm(data$Result~., data = data, family = "binomial")
summary(lgt)
data <- data %>%
mutate(logpred = predict(lgt, newdata = data,type = "response")) %>%
mutate(Result2 = ifelse(logpred >= .5, 1, 0))
TP = data %>%
filter(Result == 1) %>%
filter(Result2 == 1) %>%
summarize(count = n())
data %>%
filter(Result == 1) %>%
filter(Result2 == 1) %>%
summarize(count = n())
data %>%
filter(Result == 1) %>%
filter(Result2 == 0) %>%
summarize(count = n())
data = Auto
lm1 = lm(data$mpg ~ data$horsepower)
summary(lm1)
data = mtcars
data <- data %>%
mutate(amF = ifelse(am == 1, 1,0)) %>%
mutate(vsF = ifelse(vs == 1, 1,0)) %>%
mutate(vshp = vs*hp)
lm1 = lm(data$mpg ~ data$hp)
lm2 = lm(data$mpg ~ data$hp + as.factor(data$am) + as.factor(data$vs))
lm3 = lm(data$mpg ~ data$hp + as.factor(data$am) + as.factor(data$vs) + data$vshp)
summary(lm1)
summary(lm2)
summary(lm3)
library(ISLR)
data = Auto
lm1 = lm(data$mpg ~ data$horsepower)
summary(lm1)
data <- read.csv("Admissions.csv")
lgt = glm(data$Admitted~., data = data, family = "binomial")
data <- data %>%
mutate(logprd = predict(lgt, newdata = ., type = "response"))%>%
mutate(Admitted2 = ifelse(logprd > .75,1,0))
sum(data$Admitted == data$Admitted2)/NROW(data)
data <- read.csv("Final_Exam_Factors.csv")
data <- data %>%
mutate(NV_rf = NVDA - RF) %>%
mutate(INT_rf = INTC - RF)
fac1 = lm(NV_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
fac2 = lm(INT_rf ~ MKT_RF+SMB+HML+QMJ+BAB+MOM, data = data)
summary(fac1)
